<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[使用的浏览器为：firefox打开的默认URL为：https://www.tissotwatches.cn]]>
    </line>
    <line>
      <![CDATA[使用的浏览器为：Chrome打开的默认URL为：https://www.tissotwatches.cn]]>
    </line>
  </reporter-output>
  <suite name="Command line suite" duration-ms="27487" started-at="2020-03-24T13:29:34 CST" finished-at="2020-03-24T13:30:01 CST">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="27487" started-at="2020-03-24T13:29:34 CST" finished-at="2020-03-24T13:30:01 CST">
      <class name="com.example.excute.ExcuteCase">
        <test-method status="PASS" signature="initExcuteLog()[pri:0, instance:com.example.excute.ExcuteCase@2e5b9e21]" name="initExcuteLog" is-config="true" duration-ms="6" started-at="2020-03-24T13:29:34 CST" finished-at="2020-03-24T13:29:34 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initExcuteLog -->
        <test-method status="FAIL" signature="excute(com.example.model.UICase, java.util.List, org.testng.ITestContext)[pri:0, instance:com.example.excute.ExcuteCase@2e5b9e21]" name="excute" duration-ms="27485" started-at="2020-03-24T13:29:34 CST" data-provider="initData" finished-at="2020-03-24T13:30:01 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.example.model.UICase@21b08288]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[com.example.model.UIStep@15eea6e1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@1bd74864]]>
              </value>
            </param>
          </params>
          <exception class="io.github.bonigarcia.wdm.WebDriverManagerException">
            <message>
              <![CDATA[io.github.bonigarcia.wdm.WebDriverManagerException: chromedriver <!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>chromedriverLATEST_RELEASE Mirror</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap -->
    <link href="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <style>
      #fork{position:fixed;top:0;right:0;_position:absolute;z-index: 10000;}
      .bottom{margin: 20px auto; width: 100%; text-align: center;}
      .container{width: 1080px; margin: 50px auto;}
    </style>
  <head>
  <body>
    <a href="https://github.com/cnpm/cnpmjs.org" id="fork" target="_blank">
        <img alt="Fork me on GitHub" src="//s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png">
    </a>
    <div class="container">
      <h1>Mirror index of <a target="_blank" href=""></a></h1>
<hr>
<pre><a href="../">../</a>
</pre>
<hr>

    </div>

      <hr/>
      <div class="bottom">
        Copyright &copy; <a href="https://github.com/cnpm" target="_blank">cnpm</a>
        |
        <a href="/">Home</a>
    </div>
  </body>
</html>
 for WIN64 not found in http://npm.taobao.org/mirrors/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.github.bonigarcia.wdm.WebDriverManagerException: io.github.bonigarcia.wdm.WebDriverManagerException: chromedriver <!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>chromedriverLATEST_RELEASE Mirror</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap -->
    <link href="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <style>
      #fork{position:fixed;top:0;right:0;_position:absolute;z-index: 10000;}
      .bottom{margin: 20px auto; width: 100%; text-align: center;}
      .container{width: 1080px; margin: 50px auto;}
    </style>
  <head>
  <body>
    <a href="https://github.com/cnpm/cnpmjs.org" id="fork" target="_blank">
        <img alt="Fork me on GitHub" src="//s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png">
    </a>
    <div class="container">
      <h1>Mirror index of <a target="_blank" href=""></a></h1>
<hr>
<pre><a href="../">../</a>
</pre>
<hr>

    </div>

      <hr/>
      <div class="bottom">
        Copyright &copy; <a href="https://github.com/cnpm" target="_blank">cnpm</a>
        |
        <a href="/">Home</a>
    </div>
  </body>
</html>
 for WIN64 not found in http://npm.taobao.org/mirrors/chromedriver
at io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:774)
at io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:548)
at io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:771)
at io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:548)
at io.github.bonigarcia.wdm.WebDriverManager.handleException(WebDriverManager.java:764)
at io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:548)
at io.github.bonigarcia.wdm.WebDriverManager.setup(WebDriverManager.java:258)
at com.codeborne.selenide.webdriver.WebDriverBinaryManager.setupChrome(WebDriverBinaryManager.java:19)
at com.codeborne.selenide.webdriver.WebDriverBinaryManager.setupBinaryPath(WebDriverBinaryManager.java:10)
at com.codeborne.selenide.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:45)
at com.codeborne.selenide.drivercommands.CreateDriverCommand.createDriver(CreateDriverCommand.java:39)
at com.codeborne.selenide.impl.WebDriverThreadLocalContainer.createDriver(WebDriverThreadLocalContainer.java:126)
at com.codeborne.selenide.impl.WebDriverThreadLocalContainer.getAndCheckWebDriver(WebDriverThreadLocalContainer.java:120)
at com.codeborne.selenide.WebDriverRunner.getAndCheckWebDriver(WebDriverRunner.java:89)
at com.codeborne.selenide.impl.StaticDriver.getAndCheckWebDriver(StaticDriver.java:47)
at com.codeborne.selenide.SelenideDriver.getAndCheckWebDriver(SelenideDriver.java:150)
at com.codeborne.selenide.drivercommands.Navigator.navigateTo(Navigator.java:65)
at com.codeborne.selenide.drivercommands.Navigator.open(Navigator.java:28)
at com.codeborne.selenide.SelenideDriver.open(SelenideDriver.java:66)
at com.codeborne.selenide.Selenide.open(Selenide.java:41)
at com.example.excute.ExcuteCase.excute(ExcuteCase.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at com.example.rabbitmq.ConsumeMq.consume(ConsumeMq.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
at org.springframework.amqp.rabbit.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:130)
at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:61)
at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:196)
at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:129)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1542)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1468)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1456)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1451)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1400)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:875)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:859)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:78)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1142)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1048)
at java.lang.Thread.run(Thread.java:748)
Caused by: io.github.bonigarcia.wdm.WebDriverManagerException: chromedriver <!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>chromedriverLATEST_RELEASE Mirror</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap -->
    <link href="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <style>
      #fork{position:fixed;top:0;right:0;_position:absolute;z-index: 10000;}
      .bottom{margin: 20px auto; width: 100%; text-align: center;}
      .container{width: 1080px; margin: 50px auto;}
    </style>
  <head>
  <body>
    <a href="https://github.com/cnpm/cnpmjs.org" id="fork" target="_blank">
        <img alt="Fork me on GitHub" src="//s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png">
    </a>
    <div class="container">
      <h1>Mirror index of <a target="_blank" href=""></a></h1>
<hr>
<pre><a href="../">../</a>
</pre>
<hr>

    </div>

      <hr/>
      <div class="bottom">
        Copyright &copy; <a href="https://github.com/cnpm" target="_blank">cnpm</a>
        |
        <a href="/">Home</a>
    </div>
  </body>
</html>
 for WIN64 not found in http://npm.taobao.org/mirrors/chromedriver
at io.github.bonigarcia.wdm.WebDriverManager.downloadAndExport(WebDriverManager.java:573)
at io.github.bonigarcia.wdm.WebDriverManager.manage(WebDriverManager.java:545)
... 66 more
]]>
            </full-stacktrace>
          </exception> <!-- io.github.bonigarcia.wdm.WebDriverManagerException -->
          <reporter-output>
            <line>
              <![CDATA[使用的浏览器为：Chrome打开的默认URL为：https://www.tissotwatches.cn]]>
            </line>
          </reporter-output>
        </test-method> <!-- excute -->
      </class> <!-- com.example.excute.ExcuteCase -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
